import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import {
  FastifyAdapter,
  NestFastifyApplication,
} from '@nestjs/platform-fastify';
import * as path from 'path';
// import { NestExpressApplication } from '@nestjs/platform-express';
// import * as path from 'path';
// import * as express from 'express';

// Kh·ªüi t·∫°o ·ª©ng d·ª•ng NestJS v·ªõi Fastify. N·∫øu mu·ªën d√πng l·∫°i Express, xem ph·∫ßn comment b√™n d∆∞·ªõi.
async function bootstrap() {
  // Kh·ªüi t·∫°o app v·ªõi FastifyAdapter
  const app = await NestFactory.create<NestFastifyApplication>(
    AppModule,
    new FastifyAdapter(),
  );

  // ƒêƒÉng k√Ω multipart cho Fastify (b·∫Øt bu·ªôc ƒë·ªÉ upload file)
  // ƒê·∫£m b·∫£o ƒë√£ c√†i: npm install @fastify/multipart
  await app.register(require('@fastify/multipart'));

  // C·∫•u h√¨nh CORS
  app.enableCors({
    origin: [
      'http://localhost:3000',
      'http://localhost:3001',
      'http://localhost:3002',
    ],
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],
    credentials: true,
  });

  // N·∫øu c·∫ßn ph·ª•c v·ª• static files v·ªõi Fastify, d√πng fastify-static
  // ƒê·∫£m b·∫£o ƒë√£ c√†i: npm install @fastify/static
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  await app.register(require('@fastify/static'), {
    root: path.join(process.cwd(), 'wwwroot'),
    prefix: '/',
  });

  // S·ª≠ d·ª•ng ValidationPipe cho to√†n app
  app.useGlobalPipes(
    new ValidationPipe({ whitelist: true, forbidNonWhitelisted: true }),
  );

  // C·∫•u h√¨nh Swagger cho Fastify
  const config = new DocumentBuilder()
    .setTitle('Job Portal API')
    .setDescription('API documentation')
    .setVersion('1.0')
    .addBearerAuth()
    .build();
  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('swagger', app, document);

  // L·∫Øng nghe tr√™n port (gi·ªØ nguy√™n port nh∆∞ c≈©)
  const port = process.env.PORT || 5000;
  await app.listen(port as number, '0.0.0.0');

  // In ra th√¥ng tin m√¥i tr∆∞·ªùng
  console.log('Environment:', process.env.NODE_ENV || 'development');
  console.log(`üöÄ Server ƒëang ch·∫°y t·∫°i: http://localhost:${port}`);
  console.log(`üìñ Swagger UI: http://localhost:${port}/swagger`);
}
void bootstrap();

// --- N·∫øu mu·ªën chuy·ªÉn l·∫°i Express, b·ªè comment ƒëo·∫°n d∆∞·ªõi v√† comment l·∫°i ph·∫ßn Fastify ·ªü tr√™n ---
// async function bootstrap() {
//   const app = await NestFactory.create<NestExpressApplication>(AppModule);
//   app.enableCors({
//     origin: [
//       'http://localhost:3000',
//       'http://localhost:3001',
//       'http://localhost:3002',
//     ],
//     credentials: true,
//   });
//   app.use('/', express.static(path.join(process.cwd(), 'wwwroot')));
//   app.useGlobalPipes(
//     new ValidationPipe({ whitelist: true, forbidNonWhitelisted: true }),
//   );
//   const config = new DocumentBuilder()
//     .setTitle('Job Portal API')
//     .setDescription('API documentation')
//     .setVersion('1.0')
//     .addBearerAuth()
//     .build();
//   const document = SwaggerModule.createDocument(app, config);
//   SwaggerModule.setup('swagger', app, document);
//   const port = process.env.PORT || 5000;
//   await app.listen(port);
//   console.log('Environment:', process.env.NODE_ENV || 'development');
//   console.log(`üöÄ Server ƒëang ch·∫°y t·∫°i: http://localhost:${port}`);
//   console.log(`üìñ Swagger UI: http://localhost:${port}/swagger`);
// }
// void bootstrap();
